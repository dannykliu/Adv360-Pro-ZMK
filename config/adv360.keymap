
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC         &kp N1      &kp N2            &kp N3             &kp N4     &kp N5                   &kp C_VOLUME_DOWN           &kp C_VOLUME_UP             &kp N6         &kp N7     &kp N8          &kp N9            &kp N0     &kp ESC
   &kp TAB          &kp Q       &kp W             &kp F              &kp P      &kp B            &kp LG(LC(LS(NUMBER_4)))  &kp RG(RC(RS(NUMBER_4)))              &kp J          &kp L      &kp U           &kp Y         &kp COLON     &kp TAB
 &kp ENTER          &kp A       &kp R             &kp S              &kp T      &kp G                               &none                 &kp LG(C)       &kp LEFT_ALT                             &kp RIGHT_ALT         &kp RG(V)       &none         &kp M      &kp N    &kp E      &kp I             &kp O  &kp ENTER
 &kp LSHFT          &kp Z       &kp X             &kp C              &kp D      &kp V                               &none                     &none          &kp LCTRL          &none      &none       &kp RCTRL             &none       &none         &kp K      &kp H  &kp DOT  &kp COMMA  &kp SINGLE_QUOTE  &kp RSHFT
 &kp LG(S)  &kp RG(MINUS)  &caps_word  &lt 3 LEFT_ARROW  &lt 1 RIGHT_ARROW  &kp SPACE                       &kp BACKSPACE          &kp LEFT_COMMAND  &kp RIGHT_COMMAND  &kp BACKSPACE  &kp SPACE  &lt 1 UP_ARROW  &lt 3 DOWN_ARROW  &caps_word  &kp RG(PLUS)  &kp RG(S)
            >;
        };

        layer_symbols {
            bindings = <
  &none       &kp EXCL        &kp PRCNT  &kp KP_MULTIPLY             &kp FSLH        &kp SEMICOLON                           &none                 &none  &kp SEMICOLON   &kp FSLH  &kp KP_MULTIPLY    &kp PERCENT  &kp EXCLAMATION          &none
  &none       &macro_i         &macro_1         &macro_0            &kp LG(F)             &kp HASH            &kp LG(LS(NUMBER_4))  &kp RG(RS(NUMBER_4))      &kp POUND  &kp RG(F)         &macro_0       &macro_1         &macro_i          &none
  &none      &kp UNDER        &kp LG(Z)    &kp LG(SLASH)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)                           &none                &trans         &trans                                     &trans           &trans          &none  &kp RG(LEFT_ARROW)  &kp RA(LEFT_ARROW)  &kp RG(SLASH)        &kp RG(Z)  &kp UNDERSCORE   &none
  &none  &macro_braces  &macro_brackets    &macro_parens          &kp LA(DEL)            &kp LG(D)                          &trans                &trans         &trans     &trans           &trans         &trans           &trans         &trans           &kp RG(D)   &kp RA(BACKSPACE)  &macro_parens  &macro_brackets   &macro_braces   &none
  &none          &none    &kp LS(LG(Z))    &kp LS(ENTER)        &kp LS(ENTER)                &to 0                         &kp DEL                &trans         &trans    &kp DEL            &to 0  &kp RS(ENTER)    &kp RS(ENTER)  &kp RS(RG(Z))               &none               &none
            >;
        };

        layer_words {
            bindings = <
  &none  &kp QUESTION     &kp DOLLAR   &kp AT_SIGN             &kp AMPS        &kp TILDE             &none   &none        &kp TILDE  &kp AMPERSAND   &kp AT_SIGN     &kp DOLLAR   &kp QUESTION   &none
  &none  &macro_start  &macro_vector  &macro_layer         &macro_patch  &macro_manifold             &none   &none  &macro_manifold   &macro_patch  &macro_layer  &macro_vector   &macro_start   &none
  &none    &macro_len    &macro_self  &macro_curve         &macro_print    &macro_return             &none  &trans           &trans                                      &trans         &trans   &none  &macro_return         &macro_print  &macro_curve  &macro_self  &macro_len   &none
  &none      &macro_1       &macro_0      &macro_i  &macro_triple_quote            &none            &trans  &trans           &trans         &trans        &trans         &trans         &trans  &trans          &none  &macro_triple_quote      &macro_i     &macro_0    &macro_1   &none
  &none         &none          &none         &none                &none            &to 0            &trans  &trans           &trans         &trans         &to 0  &kp RS(ENTER)  &kp RS(ENTER)   &none          &none                &none
            >;
        };

        layer_numbers {
            bindings = <
              &kp ESC  &kp QUESTION    &kp DOLLAR         &kp AT       &kp AMPS        &kp TILDE              &none   &none        &kp TILDE      &kp AMPS   &kp AT_SIGN     &kp DOLLAR      &kp QUESTION            &kp ESC
     &kp LEFT_BRACKET     &kp SLASH  &kp NUMBER_9   &kp NUMBER_8   &kp NUMBER_7  &kp KP_MULTIPLY              &none   &none  &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9         &kp SLASH  &kp RIGHT_BRACKET
 &kp LEFT_PARENTHESIS     &kp MINUS  &kp NUMBER_6   &kp NUMBER_5   &kp NUMBER_4         &kp PLUS              &none   &none            &none                                      &none             &none              &none      &kp PLUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp RIGHT_PARENTHESIS
       &kp LEFT_BRACE     &kp EQUAL  &kp NUMBER_3   &kp NUMBER_2   &kp NUMBER_1     &kp NUMBER_0             &trans  &trans            &none        &trans        &trans          &none            &trans             &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL        &kp RIGHT_BRACE
                &none         &none     &kp CARET  &kp LESS_THAN  &kp LS(ENTER)            &to 0            &kp DEL   &none            &none       &kp DEL         &to 0  &kp RS(ENTER)  &kp GREATER_THAN          &kp CARET         &none         &none
            >;
        };

        layer_lighting {
            bindings = <
 &trans  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0                            &trans      &trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                  &trans
 &trans        &trans        &trans        &trans        &trans        &trans                            &trans      &trans           &trans        &trans        &trans           &trans        &trans                  &trans
 &trans        &trans        &trans        &trans        &trans        &trans            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR           &trans                                       &trans    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans                            &trans      &trans  &rgb_ug RGB_TOG        &trans        &trans  &rgb_ug RGB_TOG        &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans    &bl BL_DEC    &bl BL_INC         &to 0                        &bl BL_TOG      &trans           &trans    &bl BL_TOG         &to 0       &bl BL_INC    &bl BL_DEC                  &trans  &trans  &trans
            >;
        };

    };
};
